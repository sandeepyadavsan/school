<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns:mvc="http://www.springframework.org/schema/mvc"
			 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
			 xmlns:beans="http://www.springframework.org/schema/beans"
			 xmlns:context="http://www.springframework.org/schema/context"
			 xmlns:tx="http://www.springframework.org/schema/tx"
			 xmlns:p="http://www.springframework.org/schema/p"
			 xsi:schemaLocation="http://www.springframework.org/schema/mvc
		http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx
    	http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	<context:component-scan base-package="com.cloud.school.*"/>
	<!-- Enables the Spring MVC @Controller programming model -->

	<mvc:annotation-driven content-negotiation-manager="cnManager">
	  <mvc:message-converters>
	    <beans:bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
		   <beans:property name="objectMapper">
			  <beans:bean class="com.cloud.school.utils.HibernateAwareObjectMapper"></beans:bean>
		   </beans:property>
		</beans:bean>
	  </mvc:message-converters>
	</mvc:annotation-driven>
	  
	<beans:bean id="cnManager" class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
	    <beans:property name="favorPathExtension" value="true"/>
	    <beans:property name="ignoreAcceptHeader" value="true" />
	    <beans:property name="defaultContentType" value="text/html" />
	    <beans:property name="useJaf" value="false"/>
	    <beans:property name="mediaTypes">
	        <beans:map>
	            <beans:entry key="html" value="text/html" />
				<beans:entry key="ntf" value="text/event-stream" />
	            <beans:entry key="json" value="application/json" />
	            <beans:entry key="xml" value="application/xml" />
	            <beans:entry key="rss" value="application/rss+xml" />
	        </beans:map>
	    </beans:property>
	</beans:bean>
	 <context:annotation-config/>

	   
	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->

 <beans:bean class="org.springframework.web.servlet.view.XmlViewResolver">
	   <beans:property name="location">
	       <beans:value>/WEB-INF/spring-excel-views.xml</beans:value>
	   </beans:property>
	   <beans:property name="order" value="0" />
	</beans:bean>
	
	<beans:bean id="viewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<beans:property name="viewClass">
			<beans:value> org.springframework.web.servlet.view.tiles3.TilesView </beans:value>
		</beans:property>
		<beans:property name="order" value="1"/>
	</beans:bean>
	<beans:bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
		<beans:property name="definitions">
			<beans:list>
				<beans:value>/WEB-INF/tiles.xml</beans:value>
			</beans:list>
		</beans:property>

	</beans:bean>
	
	<!-- Configure to plugin JSON as request and response in method handler -->
	<beans:bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<beans:property name="messageConverters">
			<beans:list>
				<beans:ref bean="jsonMessageConverter"/>
				<beans:bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
				</beans:bean>
			</beans:list>
		</beans:property>
	</beans:bean>
	<!-- org.springframework.http.converter.json.MappingJacksonHttpMessageConverter -->
	<!-- Configure bean to convert JSON to POJO and vice versa -->
	<beans:bean id="jsonMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
	</beans:bean>
		
	<beans:bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<beans:property name="basename" value="classpath:messages" />
		<beans:property name="defaultEncoding" value="UTF-8" />
	</beans:bean>

	<beans:bean id="localeChangeInterceptor" class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
		<beans:property name="paramName" value="lang" />
	</beans:bean>

	<beans:bean id="localeResolver" class="org.springframework.web.servlet.i18n.CookieLocaleResolver">
		<beans:property name="defaultLocale" value="en" />
	</beans:bean>

	<!-- MySQL DB DataSource -->
	<beans:bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<beans:property name="driverClassName" value="com.mysql.jdbc.Driver" /> 
		<beans:property name="url" value="jdbc:mysql://localhost:3306/cloudschool?autoReconnect=true&amp;characterEncoding=UTF-8" /> 
		<beans:property name="username" value="root" />
		<beans:property name="password" value="Sandeep@321"  />
		
	</beans:bean>

	<beans:bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<beans:property name="dataSource" ref="dataSource" />
		<beans:property name="hibernateProperties">
			<beans:props>
			    <beans:prop key="hibernate.archive.autodetection">class,</beans:prop>
				<!-- <beans:prop key="hibernate.dialect">com.cloud.school.utils.CustomMySQLDialect</beans:prop> -->
				<beans:prop key="hibernate.show_sql">false</beans:prop>
				<beans:prop key="connection.pool_size">${hibernate.pool_size}</beans:prop>
				<beans:prop key="hibernate.jdbc.batch_size">${hibernate.batch_size}</beans:prop>
				
				<beans:prop key="hibernate.order_inserts">${hibernate.order_inserts}</beans:prop>
				<beans:prop key="hibernate.order_updates">${hibernate.order_updates}</beans:prop>
				
				<beans:prop key="format_sql">${hibernate.format_sql}</beans:prop>
				<beans:prop key="use_sql_commets">${hibernate.use_sql_commets}</beans:prop>
				<beans:prop key="current_session_context_class">thread</beans:prop>
		        <beans:prop key="hibernate.generate_statistics">true</beans:prop>
				<beans:prop key="hbm2ddl.auto">validate</beans:prop>
			</beans:props>
		</beans:property>
		<beans:property name="packagesToScan" value="com.cloud.school.*"></beans:property>
		
	</beans:bean>
	<tx:annotation-driven  />
	<beans:bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager"
		p:sessionFactory-ref="sessionFactory" autowire="default"/>
		
	
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- one of the properties available; the maximum file size in bytes -->
		<beans:property name="maxUploadSize" value="5120000" />
	</beans:bean>
	
</beans:beans>
